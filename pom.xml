<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>JavaSeleniumTrainingProject</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <!-- Java version to compile the source code -->
        <maven.compiler.source>17</maven.compiler.source> <!-- Source compatibility: Java 17 -->

        <!-- Java version for the generated bytecode -->
        <maven.compiler.target>17</maven.compiler.target> <!-- Target compatibility: Java 17 -->

        <!-- Character encoding used for source files -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <!-- Ensures UTF-8 encoding during build -->

        <!-- Version of AspectJ used in the project -->
        <aspectj.version>1.9.20.1</aspectj.version> <!-- AspectJ weaver version -->
    </properties>


    <dependencies>
    <!-- Selenium -->
    <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>4.20.0</version>
    </dependency>

    <!-- TestNG -->
    <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>7.10.2</version>
        <scope>test</scope>
    </dependency>

    <!-- WebDriverManager -->
    <dependency>
        <groupId>io.github.bonigarcia</groupId>
        <artifactId>webdrivermanager</artifactId>
        <version>5.8.0</version>
    </dependency>

    <!-- JetBrains annotations used for nullability checks and static code analysis -->
    <dependency>
         <groupId>org.jetbrains</groupId>
         <artifactId>annotations</artifactId>
         <version>13.0</version>
         <scope>compile</scope>
    </dependency>

    <!-- SLF4J API -->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.9</version>
    </dependency>

    <!-- Logback - the implementation of the SLF4J logging facade -->
     <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.4.11</version>
     </dependency>

     <!-- Allure TestNG adapter -->
     <dependency>
         <groupId>io.qameta.allure</groupId>
         <artifactId>allure-testng</artifactId>
         <version>2.24.0</version>
     </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Maven Surefire Plugin: Used to run TestNG tests during the Maven build lifecycle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId> <!-- Group ID for Maven plugins -->
                <artifactId>maven-surefire-plugin</artifactId> <!-- Plugin that runs unit tests -->
                <version>3.2.5</version> <!-- Version of the Surefire plugin -->
                <configuration>
                    <!-- Specifies the TestNG suite XML file to run -->
                    <suiteXmlFiles>
                        <suiteXmlFile>testng.xml</suiteXmlFile> <!-- Path to your TestNG configuration file -->
                    </suiteXmlFiles>
                    <argLine>
                        <!-- Specifies the AspectJ agent to enable aspect-oriented features -->
                        -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
                    </argLine>
                    <systemPropertyVariables>
                        <!-- Defines the output directory for Allure test result files -->
                        <allure.results.directory>${project.build.directory}/allure-results</allure.results.directory>
                    </systemPropertyVariables>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId> <!-- Group ID for AspectJ dependencies -->
                        <artifactId>aspectjweaver</artifactId> <!-- Artifact for the AspectJ Weaver -->
                        <version>${aspectj.version}</version> <!-- Uses the AspectJ version defined in the project's properties -->
                    </dependency>
                </dependencies>
            </plugin>

        <!-- Allure Maven Plugin: Used to generate and serve Allure test reports -->
            <plugin>
                <groupId>io.qameta.allure</groupId> <!-- Group ID for Allure plugin -->
                <artifactId>allure-maven</artifactId> <!-- Artifact ID for the Allure Maven plugin -->
                <version>2.12.0</version> <!-- Version of the Allure Maven plugin -->
                <executions>
                    <execution>
                        <goals>
                            <goal>serve</goal> <!-- Goal to serve the Allure report on a local web server -->
                        </goals>
                        <configuration>
                            <!-- Path to the directory where Allure stores the results -->
                            <resultsDirectory>${project.build.directory}/allure-results</resultsDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven Clean Plugin: Cleans the target directory before build -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId> <!-- Group ID for Maven plugins -->
                <artifactId>maven-clean-plugin</artifactId> <!-- Plugin used to clean the project -->
                <version>3.1.0</version> <!-- Version of the clean plugin -->
                <executions>
                    <execution>
                        <goals>
                            <goal>clean</goal> <!-- Defines the 'clean' goal to remove target directory -->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Define a profile called 'skip-tests' to skip tests during the build -->
        <profile>
            <id>skip-tests</id> <!-- The ID of the profile, which can be referenced in Maven commands -->
            <build>
                <plugins>
                    <!-- Configure the maven-surefire-plugin to control test execution -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId> <!-- The group ID of the plugin -->
                        <artifactId>maven-surefire-plugin</artifactId> <!-- The artifact ID of the plugin -->
                        <version>2.22.2</version> <!-- The version of the plugin to use -->
                        <configuration>
                            <!-- Skip the execution of tests when this profile is activated -->
                            <skip>true</skip> <!-- Disables test execution during Maven build -->
                            <!-- Specifies the output directory where Allure will store test results.
                             By default, it stores results in 'target/allure-results'. -->
                            <systemPropertyVariables>
                                <allure.results.directory>target/allure-results</allure.results.directory>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>